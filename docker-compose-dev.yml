version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scamdunk-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: scamdunk
      POSTGRES_PASSWORD: scamdunk_dev_2024
      POSTGRES_DB: scamdunk
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/api/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scamdunk -d scamdunk"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scamdunk-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: scamdunk-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scamdunk-network

  # NestJS API (Development mode with hot reload)
  api:
    image: node:18-alpine
    container_name: scamdunk-api
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./packages/api:/app
      - api_node_modules:/app/node_modules
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://scamdunk:scamdunk_dev_2024@postgres:5432/scamdunk
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: dev_jwt_refresh_secret_change_in_production
      PORT: 4000
      AI_SERVICE_URL: http://ai:8001
      BLOCKCHAIN_SERVICE_URL: http://blockchain:3002
    command: sh /app/init.sh
    ports:
      - "4000:4000"
    depends_on:
      - postgres
      - redis
    networks:
      - scamdunk-network

  # Next.js Web Application (Development mode)
  web:
    image: node:18-alpine
    container_name: scamdunk-web
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./packages/web:/app
      - web_node_modules:/app/node_modules
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
      NEXT_PUBLIC_WS_URL: ws://localhost:4000
      NEXTAUTH_SECRET: dev_nextauth_secret_change_in_production
      NEXTAUTH_URL: http://localhost:3000
    command: sh /app/init.sh
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - scamdunk-network

  # Python AI Service
  ai:
    image: python:3.11-slim
    container_name: scamdunk-ai
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./packages/ai:/app
      - ai_models:/app/models
      - ai_cache:/root/.cache
    environment:
      ENVIRONMENT: development
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://scamdunk:scamdunk_dev_2024@postgres:5432/scamdunk
      MODEL_PATH: /app/models
      LOG_LEVEL: INFO
      MAX_WORKERS: 4
      PYTHONUNBUFFERED: 1
    command: sh /app/init.sh
    ports:
      - "8001:8001"
    depends_on:
      - redis
      - postgres
    networks:
      - scamdunk-network

  # Blockchain Verification Service
  blockchain:
    image: node:18-alpine
    container_name: scamdunk-blockchain
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./packages/blockchain:/app
      - blockchain_node_modules:/app/node_modules
    environment:
      NODE_ENV: development
      PORT: 3002
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://scamdunk:scamdunk_dev_2024@postgres:5432/scamdunk
      ETHERSCAN_API_KEY: demo
      BSCSCAN_API_KEY: demo
      POLYGONSCAN_API_KEY: demo
    command: sh /app/init.sh
    ports:
      - "3002:3002"
    depends_on:
      - redis
      - postgres
    networks:
      - scamdunk-network

networks:
  scamdunk-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  api_node_modules:
  web_node_modules:
  blockchain_node_modules:
  ai_models:
  ai_cache: